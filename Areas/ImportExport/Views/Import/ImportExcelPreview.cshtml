@using Engine.Areas.ImportExport.Controllers
@model Engine.Areas.ImportExport.ServiceTests.ExcelStructreTable

@{
    ViewBag.Title = "انتقال اطلاعات به داخل سیستم ";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var models = ViewData["ModelsName"] as List<dynamic>;
}


@ViewErrorHandlers.ShowCustomMsg(Html,ViewData)
@if (ViewData[ImportController.Success] != null)
{
    <br>
    <div class="alert alert-success">@ViewData[ImportController.Success]

        </div>
}

<div class="container">

    <div class="panel panel-primary">
        <div class="panel-heading ">نمایش دیتا اکسل</div>
        <div class="panel-body" style="padding: 50px">
            @if (Model != null && Model.Nodes.Count > 0)
            {
                <div class="row">
                    @Html.HiddenFor(model => model.Id)


                    @Html.ActionLink("ویرایش ساختار", "Create", "ExcelStructures", new {id = Model.Id}, null)  |    
                    @Html.ActionLink("بازگشت به صفحه انتقال اطلاعات", "ImportExcel", "Import", new {id = Model.Id}, null)
                    @Html.HiddenFor(d => d.Id)
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.DisplayFor(model => model.Name)
                    </div>

                    @{
                        Model.Nodes = Model.Nodes.OrderBy(n => n.NumberInExcel).Reverse().ToList();
                    }

                    <table class="table table-bordered table-condensed table-responsive table-primary table-striped">
                        <thead>
                        <tr>
                            @for (int i = 0; i < Model.Nodes.Count; i++)
                            {
                                <th style="text-align: center">
                                    @Html.DisplayFor(model => Model.Nodes[i].NumberInExcel)
                                    -
                                    @Html.DisplayFor(model => Model.Nodes[i].ColumnTranslate)
                                </th>
                            }
                        </tr>
                        </thead>
                        <tbody>
                        @if (models != null)
                        {
                            for (int i = 0; i < models.Count; i++)
                            {
                                <tr>
                                    @for (int j = 0; j < Model.Nodes.Count; j++)
                                    {
                                        <td  style="text-align: center">
                                            @models[i].GetType().GetProperty(Model.Nodes[j].ColumnName).GetValue(models[i], null)
                                        </td>
                                    }
                                </tr>
                            }
                        }
                        </tbody>
                    </table>


                    <hr/>


                </div>
            }

        </div>
    </div>
</div>