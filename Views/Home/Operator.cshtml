@using SignalRMVCChat.Utility

@{
    ViewBag.Title = "Operator Chat";
    Layout = null;
}
<html>
<head>
    <style>
        .top-bar {
            position: fixed;
            width: 100%;
            top: 0px;
        }
    </style>

    <style>
        li {
            list-style: none;
            margin-bottom: 5px;
        }

        .right {
            text-align: right;
        }

        .left {
            text-align: left
        }

        .chat-body {
            width: 40%;
        }
    </style>
    <title>@ViewBag.Title</title>
    <link href="@(SiteUtility.SiteRoot)/Content/customerIframe.css" rel="stylesheet" />
    <script src="@(SiteUtility.SiteRoot)/Scripts/jquery-3.3.1.min.js"></script>
    <script src="@(SiteUtility.SiteRoot)/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="@(SiteUtility.SiteRoot)/signalr/hubs"></script>

    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <script>
        $(function () {

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message,cusomterConnectionId) {
                // Add the message to the page.
                $('#discussion')
                    .append('<li class="left"><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
                $('#customerConnectionId').val(cusomterConnectionId);
            };





            // Set initial focus to message input box.
            $('#message').focus();


            // Start the connection.
            $.connection.hub.start().done(function () {
                chat.server.setOperatorOnline(@ViewBag.OperatorId);
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.operatorSendMessage($('#message').val(), $("#customerConnectionId").val(),'@ViewBag.OperatorId');
                    $('#discussion')
                        .append('<li class="right"><strong>' + 'من' + '</strong>: ' + $('#message').val() + '</li>');
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

                $('#selectuser').click(function() {
                    chat.server.startCustomerChatting($("#customerConnectionId").val(),'@ViewBag.OperatorId');
                });

            });


        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>

</head>
<body>
    <div class="container">
        <div class="top-bar">
            <h2>@ViewBag.Title</h2>
            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="displayname" />
            <input type="button" id="selectuser" value="Select User" />
            <input type="hidden" id="customerConnectionId" />
        </div>
        <div class="chat-body" style="margin-top: 100px">
            <ul id="discussion"></ul>
        </div>
    </div>
</body>
</html>

