
@{
    ViewBag.Title = "Customer Chat";
    Layout = null;
}
<html>
<head>
    <style>
        .top-bar {
            position: fixed;
            width: 100%;
            top: 0px;
        }
    </style>
    <title>@ViewBag.Title</title>
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        console.log(localStorage.getItem("test"));
        localStorage.setItem("test","123");
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            //connection.Headers.Add("HostId", "");
            //            $.connection.hub.qs = { 'uid': 'avval' };
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion')
                    .append('<li><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            //ذخیره شناسه این کاربر که از سرور دریافت شد در لوکال استوریج
            chat.client.saveUserId = function(uid) {
                localStorage.setItem("chatToken", uid);
            };



            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));


            // Set initial focus to message input box.
            $('#message').focus();


            // Start the connection.
            $.connection.hub.start().done(function () {

                //اگر مقداری در لوکال استوریج نبود متدی در سرور فراخوانی می شود تا یک آی دی به کاربر اختصاص داده شود.
                if (localStorage.getItem("chatToken") == null) {
                    chat.server.getUserId();
                }


                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    // alert($.connection.hub.id);
                    chat.server.send($('#displayname').val(), $('#message').val());

                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });


        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>

</head>
<body>
    <div class="container">
        <div class="top-bar">
            <h2>@ViewBag.Title</h2>
            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="displayname" />
        </div>
        <div class="chat-body" style="margin-top: 100px;">
            <ul id="discussion"></ul>
        </div>
    </div>


    <input type="file" id="attachment" />
    <input type="button" onclick="postfile()" value="Click here" />
</body>
</html>


<script>

    function postfile() {
        var data = new FormData();

        // file selected by the user
        // in case of multiple files append each of them
        data.append('file', document.querySelector('#attachment').files[0]);
        var request = new XMLHttpRequest();
        request.open('post', 'http://localhost:60518/api/FileAttachment/PostFile?clientid=' + $.connection.hub.id);

        // upload progress event
        request.upload.addEventListener('progress', function (e) {
            var percent_complete = (e.loaded / e.total) * 100;

            // Percentage of upload completed
            console.log(percent_complete);
        });

        // AJAX request finished event
        request.addEventListener('load', function (e) {
            // HTTP status message
            console.log(request.status);

            // request.response will hold the response from the server
            console.log(request.response);
        });

        // send POST request to server side script
        request.send(data);
    }
</script>
